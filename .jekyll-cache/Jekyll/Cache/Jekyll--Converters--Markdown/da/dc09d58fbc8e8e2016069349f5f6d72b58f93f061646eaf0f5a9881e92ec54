I"-	<h2 id="练习1">练习1</h2>
<h3 id="1-操作系统镜像文件ucoreimg是如何一步一步生成的">1. 操作系统镜像文件ucore.img是如何一步一步生成的</h3>
<ul>
  <li>先生成kernel和bootblock，然后生成ucore.img（待补充）</li>
</ul>

<h3 id="2-一个被系统认为是符合规范的硬盘主引导扇区的特点">2. 一个被系统认为是符合规范的硬盘主引导扇区的特点</h3>
<ul>
  <li>只有512个字节</li>
  <li>最后两字节是<code class="language-plaintext highlighter-rouge">0x55AA</code></li>
  <li>由不超过466字节的启动代码和不超过64字节的硬盘分区表加上结束符构成</li>
</ul>

<h2 id="练习2">练习2</h2>
<p>先记录一下在eclipse中用gdb和qemu调试的方法：</p>
<ol>
  <li>配置External Tools Configurations，其中的arguments可以指定make的参数，然后参考MakeFile确定</li>
  <li>配置Debug Configurations，其中的Commands栏可以指定gdb的指令序列</li>
  <li>先启动qemu，让其进入等待状态（通过MakeFile），然后启动gdb，让其跟qemu建立连接，比如使用如下的参数：
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>set architecture i8086
target remote :1234
</code></pre></div>    </div>
  </li>
</ol>

<p>如果不用eclipse，可以直接写一个文件保存gdb的运行指令，然后在MakeFile中加一个选项指向这个文件（具体参考其他已有的选项）</p>

<h3 id="1-从cpu加电后执行的第一条指令开始单步跟踪bios的执行">1. 从CPU加电后执行的第一条指令开始，单步跟踪BIOS的执行</h3>
<ul>
  <li>使用上述的两条指令启动gdb就可以达到效果，根据讲课的视频知道第一条指令在<code class="language-plaintext highlighter-rouge">0xffff0</code>处，可以使用如下指令
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>x /2i 0xffff0
</code></pre></div>    </div>
    <p>查看相应的bios代码</p>
  </li>
</ul>

<h3 id="2-在初始化位置0x7c00设置实地址断点测试断点正常">2. 在初始化位置0x7c00设置实地址断点，测试断点正常</h3>
<ul>
  <li>加上<code class="language-plaintext highlighter-rouge">b 0x7c00</code>即可</li>
</ul>

<h3 id="3">3.</h3>
:ET